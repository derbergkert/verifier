---
# Create a namespace to hold all of our stuff. This way, it's all safely isolated.
apiVersion: "v1"
kind: "Namespace"
metadata:
  name: "example_namespace"
---
# Config maps hold static data we want available to our apps. In this case, a password for accessing the server.
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "verifier_server-configmap"
  namespace: "example_namespace"
  labels:
    app: "verifier_server"
data:
  ADMIN_SECRET: "topsecretpassword"
---
# Deployment specification holds most of what we care about. It says were to launch our service, how to configure its
# pod, as well as lots of other small things.
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "verifier_server"
  namespace: "example_namespace"
  labels:
    app: "verifier_server"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "verifier_server"
  template:
    metadata:
      labels:
        app: "verifier_server"
    spec:
      containers:
      - name: "verifier_server"
        image: "gcr.io/pure-spirit-243501/web:latest"
        env:
        - name: "ADMIN_SECRET"
          valueFrom:
            configMapKeyRef:
              key: "ADMIN_SECRET"
              name: "verifier_server-configmap"
---
# Service defines how the deployment is exposed on the network for access.
apiVersion: v1
kind: Service
metadata:
  name: verifier_server-service
  namespace: example_namespace
  labels:
    app: "verifier_server"
spec:
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  selector:
    app: "verifier_server"
---
# Network policy goes here.

